<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>汇编 on wasabi</title>
    <link>https://www.kcode.icu/tags/%E6%B1%87%E7%BC%96/</link>
    <description>Recent content in 汇编 on wasabi</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-hans</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Sun, 04 Apr 2021 20:30:20 +0000</lastBuildDate><atom:link href="https://www.kcode.icu/tags/%E6%B1%87%E7%BC%96/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Go 使用的 plan9 汇编语言初探</title>
      <link>https://www.kcode.icu/posts/go/2021-03-20-go-%E4%BD%BF%E7%94%A8%E7%9A%84-plan9-%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%E5%88%9D%E6%8E%A2/</link>
      <pubDate>Sun, 04 Apr 2021 20:30:20 +0000</pubDate>
      
      <guid>https://www.kcode.icu/posts/go/2021-03-20-go-%E4%BD%BF%E7%94%A8%E7%9A%84-plan9-%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%E5%88%9D%E6%8E%A2/</guid>
      <description>plan9 汇编既不同于 Intel-x86 家族的汇编，也不与 AT&amp;amp;T 标准相同，作者是 unix 操作系统的同一批人，bell 实验室所开发的，其实 plan9 是一个操作系统，我们主要关注构建它的汇编语言。
Go 语言早在 1.5 版本就实现了自举，即使用 Go 语言去写 Go 语言。Go 的底层实现是使用 plan9 汇编完成的，并不是我们常见的 Intel 家族汇编，它与其他的汇编有几个不同点，放在下文 与传统汇编差异 解释。
我们从最简单的例子出发。
一个简单的程序 package main func add(x, y int) (sum int) { z := x + y return z } func main() { c := add(2, 3) } 在命令行中执行 go tool compile -s main.go 查看 plan9 的汇编代码，我们目前只关注 add 函数 ：
&amp;quot;&amp;quot;.add STEXT nosplit size=19 args=0x18 locals=0x0 funcid=0x0 0x0000 00000 (notify.</description>
    </item>
    
  </channel>
</rss>
