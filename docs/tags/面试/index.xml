<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>面试 on wasabi</title>
    <link>https://www.kcode.icu/tags/%E9%9D%A2%E8%AF%95/</link>
    <description>Recent content in 面试 on wasabi</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-hans</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Fri, 15 Jan 2021 21:10:55 +0000</lastBuildDate><atom:link href="https://www.kcode.icu/tags/%E9%9D%A2%E8%AF%95/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>一些常见Go语言及面试问题的整理</title>
      <link>https://www.kcode.icu/posts/interview/somequestions/</link>
      <pubDate>Fri, 15 Jan 2021 21:10:55 +0000</pubDate>
      
      <guid>https://www.kcode.icu/posts/interview/somequestions/</guid>
      <description>这篇博客记录一些关于面试常见的 Go 语言方面的问题，希望能帮到大家，等待更新中。
Go make和new的区别，使用和底层？ Go内存管理 goroutine 什么时候会阻塞？ goroutine有几种状态？ m操作g的时候有自旋与非自旋状态？
线程有哪些状态 注册中心挂了怎么办？ N节点，raft一致性？
反射底层原理？ 通过反射执行函数，拿结构体tag？ 锁机制？饥饿模式正常模式？锁底层原理？ channel使用，坑，底层原理？ </description>
    </item>
    
    <item>
      <title>记人生中前几次面试及思考</title>
      <link>https://www.kcode.icu/posts/interview/2020-12-interview/</link>
      <pubDate>Sun, 03 Jan 2021 21:18:13 +0000</pubDate>
      
      <guid>https://www.kcode.icu/posts/interview/2020-12-interview/</guid>
      <description>写作背景 由于早早有了就业的想法，于是我在大三上学期快要结束的时候便早早地”物色“各大公司的实习了，也是希望能在就业前增加段实习经历，丰富一下经验。这也是人生中我的第一次面试，感触颇多。特别记录下来自己的总结以及对于假期自己的学习规划。
面试总结 这次我面试的总共有三家公司，跟谁学、字节跳动和腾讯，对我印象最深也是帮助最大的就是”字节跳动“。关于面试的准备大致有三块，简历、技术口述和手撕代码，下面分开说。
简历 这里使用的简历风格是参考了 @帅地玩编程 和 @码农桃花源 两位大佬，一个是本科腾讯大学时期年入几十万的，第二个是 Go 圈的全成大佬，推荐大家关注。
总体是简约并且色调一致，简历也是需要一点点迭代的，不断完善用词，前面挂了也是没有办法的事情。这里需要确保这么几点：
 不要造假，实事求是 。如果你写熟悉甚至精通，你躲过了 HR，但是人家面试官上来问了一个很简单的问题你答不上来，人家可能没兴趣继续问了。。在面试官心里你的这项技术等于没写，并且有了吹牛的成分，众所周知，搞技术的都不喜欢这种人。 拿出有说服力的证据。 举个简单的例子，你在个人相关那栏里写英语能力强，学习能力不错，热爱并常学习新技术，人家让你现场看个英文技术文，或者跟你聊两句看法，你蒙蔽了，尴尬不。问你平时咋学习的，你磕磕巴巴说不出个所以然，或者一点逻辑没有，东一头看书，西一头看视频，再来一手看野生技术文章，你说尴尬不。 注意行业基础。 我拿技术来说，搞技术的，你说你写了个热爱技术，结果写个 GitHub ，都能拼错，写成 Github 等等，写个 CSDN 写成 Csdn ，虽说这不是什么大事，但是这些书面东西，我们搞技术的不能犯错的，这给人的印象就是你很不专业，或者说你接触的很少以至于记不清楚。假如说你说热爱开源，整天 GitHub 排行榜逛个遍，你告诉我你不知道 GitHub 怎么拼，不合适吧？我曾经见过一个人说他懂这懂那，结果拿来简历一看，关于技术的名字错了好几个，还说自己热爱这些。  技术口述 这部分是面试重头戏，除去手撕代码部分其余就是这个了（还可能有项目环节），对于这部分我感触最多。
感触最大的就是一定要有自己的理解，并有深度。什么叫有自己的理解，就是如果换个方式问你，或者从另一个问题引申过来你能不能想到。有经验的面试官很喜欢这样问，如果你对知识没有形成体系，很容易造成一问就脑子一片空白的情况。
有深度指的是要能从使用到原理再到理解讲出一系列成体系的知识点，不是仅仅说一点应用层面的东西。我觉得这点我们平时很容易忽视，常常说个 10 秒就没了，谈不上熟悉。
手撕 这个环节部分大厂面试其实做的不错的，如果你上来没思路没见过，他会引导你让你一步一步去解决，看你思维和反应能力，要平时多思考，不能无脑刷，没啥说的。
假期规划 早些面试还是有好处的，确实能认识到自己的不足，我总结有这些点：
 自我介绍说重点，这会作为后续提问参考。 项目要有难点，解决方法，思考。 知识理解要有深度。  每一条都是实战出来的教训。。你可以比对自己成长，希望对你有所帮助。</description>
    </item>
    
  </channel>
</rss>
