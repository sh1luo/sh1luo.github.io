<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>面经 on wasabi</title><link>https://kcode.icu/tags/%E9%9D%A2%E7%BB%8F/</link><description>Recent content in 面经 on wasabi</description><generator>Hugo -- gohugo.io</generator><language>zh-hans</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 21 Nov 2021 21:22:20 +0000</lastBuildDate><atom:link href="https://kcode.icu/tags/%E9%9D%A2%E7%BB%8F/index.xml" rel="self" type="application/rss+xml"/><item><title>聊聊 22 届秋招的体验</title><link>https://kcode.icu/posts/interview/2021-12-interview/</link><pubDate>Sun, 21 Nov 2021 21:22:20 +0000</pubDate><guid>https://kcode.icu/posts/interview/2021-12-interview/</guid><description>今年的秋招早已结束了，因为我躺平了一个多月，所以这篇博客就拖到了现在。
我的秋招结束的比较早，一共拿到了 6 家公司的 Offer：腾讯/字节/美团/百度/ThoughtWorks/好未来，其中有白菜也有 SSP。比较有趣的是，好未来这家公司在其他家公司都在薪资/意向沟通的时候，给我打来电话说的却是 Offer 被取消，原因是今年集团问题，不再新招收校招生，以实习转正优先。打来电话是说明 如果有其他 Offer 可以签了，不用等好未来了，也算很良心了，没有钓鱼。。
惊讶的是字节在最后给我开出了 SSP 的评级（从薪资猜测），给出的薪资接近今年校招开发岗最高。
Offer 的情况都比较普通，这里着重聊聊我对 22 届互联网秋招的看法。
敲门砖 线上面试与线下面试差别不大，学历 和 简历 依然是两个重要因素。
学历 事实是，现在互联网中大厂应该普遍不接受专科及以下的学历了，对二/三本也有一些意见，例如有一位三本同学在拿到小红书的 SSP 的 Offer 后，被告知 Offer 审批不通过，给了个最低的价格，也俗称白菜价。评论区一致认为就是学历的锅，我也不置可否。
快速发展的互联网行业，越来越多的研究生大军不断涌入，也属实没什么办法。
我的未来导师也跟我说，现在校招生的压力很大，比社招难多了。学生太多，导致筛选条件越来越多，对于大厂面试来说，八股 + 写题 + 实习 + 项目 都是基本操作了。
对于一些公司的内部招聘系统（例如字节），算法会自动给招聘者打上标签，例如 “985/211等双一流高校” “大厂实习” “国赛奖项”，如果你有 3、4 个标签，甚至直接约面；相反，如果一个标签都没有，你简历写的再好，可能也没机会。
从这个方向可以看出来，秋招或者春招之前，最好提前准备。
简历 逛多了牛客/脉脉等 互联网求职 平台，对一些同学的简历实在是无力吐槽，说好听点，叫对自己的定位不够清楚，说难听点，叫没有点 B 树。曾经献过血，有驾照，支教，当过超市服务员都往上写，实在是怕对面觉得你经历不够丰富。
信息差是存在的，我经常给身边的朋友、同学推荐 超级简历 这个平台，没什么优点，就是简洁。因为我觉得在写简历这个过程中，最大的阻力应该是 排版，而不是内容。我们需要有一个专业的平台或者什么告诉我们该怎么写，而写什么别人没法教，也教不了，超级简历这个平台我认为足够了。
找一份标准的排版，把你的教育经历、实习经历、项目经历、专业技能和个人相关（可省略）逐条写上去，做到清晰，干净即可，目标是让别人一眼看出你的求职意愿，你的特长优势。我们只需要专注于内容本身，而不用去过度纠结该把这段字设置成 4 号还是 5 号。
秋招流程 秋招的战线比较长，且有不断增长的趋势，这意味着我们有更多的时间去准备。
实习 有一段大厂的实习经历会让你的秋招事半功倍。因为你相当于经过了一次筛选，大厂帮他们提前面试了一次，面试的一部分话题可以从传统八股文转变到实习与项目经历上来，这对我们是非常有利的，因为这是难得的主动权由我们掌握，另一个是自我介绍。
你想想让面试官追着你细扣 epoll 源码简单，还是问你在实习中做了什么简单？
所以我的建议是，能去大厂实习尽量去大厂实习一次，2 个月以上，实在不行去中等规模的也行，但是不要去太小的，因为你得不到太多的锻炼，更多的是打杂。</description></item><item><title>大三上学期好未来字节腾讯实习面经</title><link>https://kcode.icu/posts/interview/2021-3-nowcoder/</link><pubDate>Tue, 30 Mar 2021 17:20:20 +0000</pubDate><guid>https://kcode.icu/posts/interview/2021-3-nowcoder/</guid><description>说在前面 经常“吸”社区，也要时不时反馈一点，一起延续开源精神。
个人情况：22 届双非一本，从去年 12 月开始面试找寒假的实习，由于学校疫情原因没去成功，于是经过寒假复习“二战”。先后面了跟谁学，腾讯，字节，阿里。
由于我个人情况特殊，从大一开始使用 Go 语言到现在，了解比较多，C++ 用来写题，有的问题可能不具有参考价值，理性看待。
另外有的问题确实记不得了，大家不要太看重问题，因为大部分都是八股的题型，网上一搜一大堆，博客的总结能几万字，但是没有面试官喜欢听这种东西，都是搞技术的不喜欢花里胡哨，我曾经就因为答协程区别和特点被反问 你这个有点像背的，，不过我也没反驳，下次总结避免就好了。你要答出问题的本质，底层的思考，说出跟别人不一样的地方，用有些面试官的话来说就是 这个问题我只想听你说一句话，我看我能不能听到。说白了就是你说了一大堆可能在对面听来都没听到，说不到点子上等于没说。
另外本文我主要突出面试过程，不是面试问题的总结帖（有的问题我真的记不得了 :(。
好了，不说废话了，大家看正文吧，有什么问题欢迎找我聊~
跟谁学两面 oc，第一次面试 一面 自我介绍
项目：
用go写的rpc框架的具体功能细节，注册中心单机还是分布式的，其中一个挂了怎么办？一致性，可靠性怎么保证的。超时控制，加锁和管道支持并发，单机（考虑了多机情况，说了已经在todo里了）。
Go+QML 利用cgo实现的跨平台桌面应用功能，场景，为什么要写这个东西？ 我说为了性能，追问性能如何体现，如何测试的，如何优化。答宏观上从任务管理器，top中看，细节上从pprof进行性能定位调优，从火焰图上看。追问pprof还有什么功能，你一般是怎么定位问题的？回答还是先具体再细节。
这时候我就俩项目，后面怕不够，又想拿go写个web的，正好学校说需要重构某个子选课系统，就跟同学接了，这个下面说。
写个快排？时分复杂度分析？看你了解过go的标准库实现，说说go的快排源码怎么实现的，答三数取中，根据数据量选择多种排序方式组合，追问细节我就不知道i了，，确实没看过这个。。他说没事。
协程与线程区别？为什么快，快在哪了？自定义了4个伪寄存器 fp sp sb pc，轻量，初始2KB动态伸缩，由runtime管理，对os透明等等各种原因，又说了以下gmp调度的优势。追问寄存器是什么，你对寄存器还有什么了解。我说了一点关于go和c 在寄存器方面使用的不同，函数传参，调用堆栈等等，扯了点汇编区别，就又问了几个汇编指令，过了。
虚拟地址，物理地址区别
rpc与http区别，使用场景，自己总结一下再说几条
还有点八股没啥难的 有点忘了。。
也没问啥难点一面就过了
二面部门leader 详细聊虚拟地址与物理地址，为什么分这俩，段页作用，为什么内存占用能比实际要大的多（还是虚拟地址作用），循序渐进的从现象到技术实现来问，不是考试。
go+qml项目问了几个关于cgo的特性，聊了聊优劣势，看得出来这个项目好多面试官也不懂，cgo特性一是用起来结合其他语言的时候确实有坑点，二是拿go写gui有点杀马特，不招人待见？
闲聊网络跟os，最后问了个智力问题，就过了。
总结 感觉难度不大，缺人进来打杂，要求不高。问了一下前辈，说加班严重，校招的话工资高了可以放备选考虑去。。面试体验还不错，自己缺乏一点回答技巧上的经验，聊技术不能一下到点子上，废话略多。
字节二面挂，腾讯二面挂 这俩对我帮助最大。
字节 字节对我最大的帮助是深度思考算法，为什么要这么写，别的方法行不行？
自己感觉有了点面试方面的经验，就投了较大的厂，遭到毒打。
字节一面是算法面，最后写了个单链表归并非递归，勉强通过。
二面上来扣20分钟rpc项目，挖出你这个项目的所有特点为止：
序列化方式有哪几个，区别是什么，自己写过吗 协议用的哪个，为啥不用udp &amp;hellip;鞭打。。。 当时确实缺少对项目的深度思考，也是参考了声哥的项目，不过他是java写的，用go写起来参考了不少框架源码，rpcx，grpc，实现起来略费劲，时间仓促，底层思考略少。
二面挂是因为问了个快排复杂度，详细分析这三个时间复杂度的结果，怎么来的这个值，举例子说明等等，自己算法这方面当时确实弱项，挂了正常。
腾讯 腾讯对我最大的帮助是看源码，有的东西嚼别人的东西是不够的，应该学习一手资料，详情参考曹大的博客《工程师应该怎么学习》。还是太菜了，缺乏深度思考
几个亿找中位数
搜索树旋转过程
对面应该是c++的，问我map，我说我用go，他就说go也行，你说说go map 时间复杂度，为啥是这个值，为什么这么多数，O1能直接访问到，当时map只了解了一点，遂答的浅。</description></item></channel></rss>